	.text
	.p2align 4
	.globl	coolout_init
	.type	coolout_init, @function
coolout_init:
.LFB24:
	.cfi_startproc
	endbr64
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	xorl	%edx, %edx
	movl	$100000000, %esi
	xorl	%edi, %edi
	xorl	%r9d, %r9d
	movl	$-1, %r8d
	movl	$34, %ecx
	call	mmap@PLT
	movl	$3, %edx
	movl	$4096, %esi
	movq	$4096, coolout_capacity(%rip)
	movq	%rax, coolout_buffer(%rip)
	movq	%rax, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	jmp	mprotect@PLT
	.cfi_endproc
.LFE24:
	.size	coolout_init, .-coolout_init
	.p2align 4
	.globl	coolout_flush
	.type	coolout_flush, @function
coolout_flush:
.LFB25:
	.cfi_startproc
	endbr64
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	movq	coolout_used(%rip), %rdx
	movq	coolout_buffer(%rip), %rsi
	movl	$1, %edi
	call	write@PLT
	movq	$0, coolout_used(%rip)
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE25:
	.size	coolout_flush, .-coolout_flush
	.p2align 4
	.globl	coolout
	.type	coolout, @function
coolout:
.LFB26:
	.cfi_startproc
	endbr64
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rdi, %rbx
	call	strlen@PLT
	movq	coolout_capacity(%rip), %rsi
	movq	%rax, %r12
	movl	%eax, %ebp
	cltq
	addq	coolout_used(%rip), %rax
	addq	$1, %rax
	cmpq	%rsi, %rax
	jge	.LPOOP17
.LPOOP7:
	xorl	%edx, %edx
	testl	%r12d, %r12d
	jg	.LPOOP8
	jmp	.LPOOP6
	.p2align 4,,10
	.p2align 3
.LPOOP9:
	movq	%r8, coolout_used(%rip)
	movzbl	(%rcx), %ecx
.LPOOP11:
	movb	%cl, (%rax)
	movl	%edi, %edx
	cmpl	%edi, %ebp
	jle	.LPOOP6
.LPOOP8:
	movq	coolout_used(%rip), %rax
	movslq	%edx, %rsi
	leal	1(%rdx), %edi
	leaq	(%rbx,%rsi), %rcx
	leaq	1(%rax), %r8
	addq	coolout_buffer(%rip), %rax
	cmpb	$92, (%rcx)
	jne	.LPOOP9
	movzbl	1(%rbx,%rsi), %esi
	cmpb	$110, %sil
	je	.LPOOP18
	cmpb	$116, %sil
	jne	.LPOOP9
	movl	$9, %ecx
	leal	2(%rdx), %edi
	movq	%r8, coolout_used(%rip)
	movl	%edi, %edx
	movb	%cl, (%rax)
	cmpl	%edi, %ebp
	jg	.LPOOP8
.LPOOP6:
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.LPOOP18:
	.cfi_restore_state
	movq	%r8, coolout_used(%rip)
	movl	$10, %ecx
	leal	2(%rdx), %edi
	jmp	.LPOOP11
	.p2align 4,,10
	.p2align 3
.LPOOP17:
	movq	coolout_buffer(%rip), %rdi
	addq	%rsi, %rsi
	movl	$3, %edx
	movq	%rsi, coolout_capacity(%rip)
	call	mprotect@PLT
	jmp	.LPOOP7
	.cfi_endproc
.LFE26:
	.size	coolout, .-coolout
	.p2align 4
	.globl	coolout_int
	.type	coolout_int, @function
coolout_int:
.LFB28:
	.cfi_startproc
	endbr64
	movq	%rdi, %rax
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	negq	%rax
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	movq	%rdi, %rbp
	cmovs	%rdi, %rax
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	cmpq	$9, %rax
	jle	.LPOOP25
	cmpq	$99, %rax
	jle	.LPOOP26
	cmpq	$999, %rax
	jle	.LPOOP27
	cmpq	$9999, %rax
	jle	.LPOOP28
	cmpq	$99999, %rax
	jle	.LPOOP29
	cmpq	$999999, %rax
	jle	.LPOOP30
	cmpq	$9999999, %rax
	jle	.LPOOP31
	cmpq	$99999999, %rax
	jle	.LPOOP32
	cmpq	$999999999, %rax
	jle	.LPOOP33
	movabsq	$9999999999, %rdx
	cmpq	%rdx, %rax
	jle	.LPOOP34
	movabsq	$99999999999, %rdx
	cmpq	%rdx, %rax
	jle	.LPOOP35
	movabsq	$999999999999, %rdx
	cmpq	%rdx, %rax
	jle	.LPOOP36
	movabsq	$9999999999999, %rdx
	cmpq	%rdx, %rax
	jle	.LPOOP37
	movabsq	$99999999999999, %rdx
	cmpq	%rdx, %rax
	jle	.LPOOP38
	movabsq	$999999999999999, %rdx
	cmpq	%rdx, %rax
	jle	.LPOOP39
	movabsq	$9999999999999999, %rdx
	cmpq	%rdx, %rax
	jle	.LPOOP40
	movabsq	$99999999999999999, %rdx
	cmpq	%rdx, %rax
	jle	.LPOOP41
	movabsq	$999999999999999999, %rdx
	cmpq	%rdx, %rax
	setg	%r9b
	setg	%bl
	movzbl	%bl, %ebx
	movzbl	%r9b, %r12d
	addq	$18, %rbx
	addl	$18, %r12d
	jmp	.LPOOP20
	.p2align 4,,10
	.p2align 3
.LPOOP25:
	movl	$1, %ebx
	movl	$1, %r12d
.LPOOP20:
	movq	coolout_used(%rip), %rax
	movq	%rbp, %rcx
	movq	coolout_capacity(%rip), %rsi
	shrq	$63, %rcx
	leaq	(%rax,%rbx), %rdx
	addq	%rcx, %rdx
	cmpq	%rsi, %rdx
	jg	.LPOOP48
.LPOOP21:
	testq	%rbp, %rbp
	jns	.LPOOP22
	leaq	1(%rax), %rdx
	negq	%rbp
	movq	%rdx, coolout_used(%rip)
	movq	coolout_buffer(%rip), %rdx
	movb	$45, (%rdx,%rax)
	movq	coolout_used(%rip), %rax
.LPOOP22:
	addq	coolout_buffer(%rip), %rax
	movabsq	$-3689348814741910323, %r8
	movq	%rax, %rsi
	movq	%rbp, %rax
	mulq	%r8
	movq	%rdx, %rcx
	shrq	$3, %rcx
	leaq	(%rcx,%rcx,4), %rax
	addq	%rax, %rax
	subq	%rax, %rbp
	addl	$48, %ebp
	movb	%bpl, -1(%rbx,%rsi)
	cmpl	$1, %r12d
	je	.LPOOP23
	movslq	%r12d, %r9
	movl	$1, %esi
	.p2align 4,,10
	.p2align 3
.LPOOP24:
	movq	%rcx, %rax
	movq	coolout_used(%rip), %rdi
	mulq	%r8
	addq	%rbx, %rdi
	subq	%rsi, %rdi
	addq	$1, %rsi
	shrq	$3, %rdx
	leaq	(%rdx,%rdx,4), %rax
	addq	%rax, %rax
	subq	%rax, %rcx
	movq	coolout_buffer(%rip), %rax
	addl	$48, %ecx
	movb	%cl, -1(%rax,%rdi)
	movq	%rdx, %rcx
	cmpq	%r9, %rsi
	jne	.LPOOP24
.LPOOP23:
	addq	%rbx, coolout_used(%rip)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.LPOOP48:
	.cfi_restore_state
	movq	coolout_buffer(%rip), %rdi
	addq	%rsi, %rsi
	movl	$3, %edx
	movq	%rsi, coolout_capacity(%rip)
	call	mprotect@PLT
	movq	coolout_used(%rip), %rax
	jmp	.LPOOP21
	.p2align 4,,10
	.p2align 3
.LPOOP27:
	movl	$3, %ebx
	movl	$3, %r12d
	jmp	.LPOOP20
.LPOOP30:
	movl	$6, %ebx
	movl	$6, %r12d
	jmp	.LPOOP20
	.p2align 4,,10
	.p2align 3
.LPOOP26:
	movl	$2, %ebx
	movl	$2, %r12d
	jmp	.LPOOP20
.LPOOP28:
	movl	$4, %ebx
	movl	$4, %r12d
	jmp	.LPOOP20
.LPOOP29:
	movl	$5, %ebx
	movl	$5, %r12d
	jmp	.LPOOP20
.LPOOP36:
	movl	$12, %ebx
	movl	$12, %r12d
	jmp	.LPOOP20
.LPOOP31:
	movl	$7, %ebx
	movl	$7, %r12d
	jmp	.LPOOP20
.LPOOP32:
	movl	$8, %ebx
	movl	$8, %r12d
	jmp	.LPOOP20
.LPOOP33:
	movl	$9, %ebx
	movl	$9, %r12d
	jmp	.LPOOP20
.LPOOP34:
	movl	$10, %ebx
	movl	$10, %r12d
	jmp	.LPOOP20
.LPOOP35:
	movl	$11, %ebx
	movl	$11, %r12d
	jmp	.LPOOP20
.LPOOP37:
	movl	$13, %ebx
	movl	$13, %r12d
	jmp	.LPOOP20
.LPOOP38:
	movl	$14, %ebx
	movl	$14, %r12d
	jmp	.LPOOP20
.LPOOP39:
	movl	$15, %ebx
	movl	$15, %r12d
	jmp	.LPOOP20
.LPOOP40:
	movl	$16, %ebx
	movl	$16, %r12d
	jmp	.LPOOP20
.LPOOP41:
	movl	$17, %ebx
	movl	$17, %r12d
	jmp	.LPOOP20
	.cfi_endproc
.LFE28:
	.size	coolout_int, .-coolout_int
	.globl	coolout_used
	.bss
	.align 8
	.type	coolout_used, @object
	.size	coolout_used, 8
coolout_used:
	.zero	8
	.globl	coolout_capacity
	.align 8
	.type	coolout_capacity, @object
	.size	coolout_capacity, 8
coolout_capacity:
	.zero	8
	.globl	coolout_buffer
	.align 8
	.type	coolout_buffer, @object
	.size	coolout_buffer, 8
coolout_buffer:
	.zero	8
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
