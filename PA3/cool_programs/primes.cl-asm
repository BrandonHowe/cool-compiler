                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A..vtable:              ;; virtual function table for A
                        constant string1
                        constant A..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant A.value
                        constant A.set_var
                        constant A.method1
                        constant A.method2
                        constant A.method3
                        constant A.method4
                        constant A.method5
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A2I..vtable:            ;; virtual function table for A2I
                        constant string2
                        constant A2I..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant A2I.c2i
                        constant A2I.i2c
                        constant A2I.a2i
                        constant A2I.a2i_aux
                        constant A2I.i2a
                        constant A2I.i2a_aux
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
B..vtable:              ;; virtual function table for B
                        constant string3
                        constant B..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant A.value
                        constant A.set_var
                        constant A.method1
                        constant A.method2
                        constant A.method3
                        constant A.method4
                        constant B.method5
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Bool..vtable:           ;; virtual function table for Bool
                        constant string4
                        constant Bool..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
C..vtable:              ;; virtual function table for C
                        constant string5
                        constant C..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant A.value
                        constant A.set_var
                        constant A.method1
                        constant A.method2
                        constant A.method3
                        constant A.method4
                        constant C.method5
                        constant C.method6
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
D..vtable:              ;; virtual function table for D
                        constant string6
                        constant D..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant A.value
                        constant A.set_var
                        constant A.method1
                        constant A.method2
                        constant A.method3
                        constant A.method4
                        constant B.method5
                        constant D.method7
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
E..vtable:              ;; virtual function table for E
                        constant string7
                        constant E..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant A.value
                        constant A.set_var
                        constant A.method1
                        constant A.method2
                        constant A.method3
                        constant A.method4
                        constant B.method5
                        constant D.method7
                        constant E.method6
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO..vtable:             ;; virtual function table for IO
                        constant string8
                        constant IO..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant IO.in_int
                        constant IO.in_string
                        constant IO.out_int
                        constant IO.out_string
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Int..vtable:            ;; virtual function table for Int
                        constant string9
                        constant Int..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main..vtable:           ;; virtual function table for Main
                        constant string10
                        constant Main..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant IO.in_int
                        constant IO.in_string
                        constant IO.out_int
                        constant IO.out_string
                        constant Main.menu
                        constant Main.prompt
                        constant Main.get_int
                        constant Main.is_even
                        constant Main.class_type
                        constant Main.print
                        constant Main.main
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object..vtable:         ;; virtual function table for Object
                        constant string11
                        constant Object..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String..vtable:         ;; virtual function table for String
                        constant string12
                        constant String..new
                        constant Object.abort
                        constant Object.copy
                        constant Object.type_name
                        constant String.concat
                        constant String.length
                        constant String.substr
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A..new:                 ;; constructor for A
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 10
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- A..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field var (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st r0[3] <- r1
                        ;; self[3] var initializer <- 0
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        st r0[3] <- r1
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A2I..new:               ;; constructor for A2I
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 3
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 11
                        st r0[0] <- r2
                        li r2 <- 3
                        st r0[1] <- r2
                        la r2 <- A2I..vtable
                        st r0[2] <- r2
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
B..new:                 ;; constructor for B
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 12
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- B..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field var (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st r0[3] <- r1
                        ;; self[3] var initializer <- 0
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        st r0[3] <- r1
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Bool..new:              ;; constructor for Bool
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 0
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- Bool..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field (raw content) (Int)
                        li r1 <- 0
                        st r0[3] <- r1
                        ;; self[3] (raw content) initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
C..new:                 ;; constructor for C
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 13
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- C..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field var (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st r0[3] <- r1
                        ;; self[3] var initializer <- 0
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        st r0[3] <- r1
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
D..new:                 ;; constructor for D
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 14
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- D..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field var (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st r0[3] <- r1
                        ;; self[3] var initializer <- 0
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        st r0[3] <- r1
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
E..new:                 ;; constructor for E
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 15
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- E..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field var (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st r0[3] <- r1
                        ;; self[3] var initializer <- 0
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        st r0[3] <- r1
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO..new:                ;; constructor for IO
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 3
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 16
                        st r0[0] <- r2
                        li r2 <- 3
                        st r0[1] <- r2
                        la r2 <- IO..vtable
                        st r0[2] <- r2
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Int..new:               ;; constructor for Int
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 1
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- Int..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field (raw content) (Int)
                        li r1 <- 0
                        st r0[3] <- r1
                        ;; self[3] (raw content) initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main..new:              ;; constructor for Main
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 7
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 17
                        st r0[0] <- r2
                        li r2 <- 7
                        st r0[1] <- r2
                        la r2 <- Main..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field char (String)
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        st r0[3] <- r1
                        ;; self[4] holds field avar (A)
                        li r1 <- 0
                        st r0[4] <- r1
                        ;; self[5] holds field a_var (A)
                        li r1 <- 0
                        st r0[5] <- r1
                        ;; self[6] holds field flag (Bool)
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        st r0[6] <- r1
                        ;; self[3] char initializer -- none 
                        ;; self[4] avar initializer -- none 
                        ;; self[5] a_var initializer -- none 
                        ;; self[6] flag initializer <- true
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        st r0[6] <- r1
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object..new:            ;; constructor for Object
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 3
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 18
                        st r0[0] <- r2
                        li r2 <- 3
                        st r0[1] <- r2
                        la r2 <- Object..vtable
                        st r0[2] <- r2
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String..new:            ;; constructor for String
                        mov fp <- sp
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        li r0 <- 4
                        alloc r0 r0
                        ;; store class tag, object size and vtable pointer
                        li r2 <- 3
                        st r0[0] <- r2
                        li r2 <- 4
                        st r0[1] <- r2
                        la r2 <- String..vtable
                        st r0[2] <- r2
                        ;; initialize attributes
                        ;; self[3] holds field (raw content) (String)
                        la r1 <- the.empty.string
                        st r0[3] <- r1
                        ;; self[3] (raw content) initializer -- none 
                        mov r1 <- r0
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object.abort:           ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; method body begins
                        la r1 <- string13
                        syscall IO.out_string
                        syscall exit
Object.abort.end:       ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object.copy:            ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; method body begins
                        ld r2 <- r0[1]
                        alloc r1 r2
                        push r1
l1:                     bz r2 l2
                        ld r3 <- r0[0]
                        st r1[0] <- r3
                        li r3 <- 1
                        add r0 <- r0 r3
                        add r1 <- r1 r3
                        li r3 <- 1
                        sub r2 <- r2 r3
                        jmp l1
l2:                     ;; done with Object.copy loop
                        pop r1
Object.copy.end:        ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Object.type_name:       ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; method body begins
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; obtain vtable for self object
                        ld r2 <- r0[2]
                        ;; look up type name at offset 0 in vtable
                        ld r2 <- r2[0]
                        st r1[3] <- r2
Object.type_name.end:   ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A.value:                ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; method body begins
                        ;; var
                        ld r1 <- r0[3]
A.value.end:            ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A.set_var:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        ;; num
                        ld r1 <- fp[2]
                        st r0[3] <- r1
                        mov r1 <- r0
A.set_var.end:          ;; method body ends
                        pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A.method1:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        mov r1 <- r0
A.method1.end:          ;; method body ends
                        pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A.method2:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[3] holds argument num1 (Int)
                        ;; fp[2] holds argument num2 (Int)
                        ;; method body begins
                        ;; fp[0] holds local x (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; num1
                        ld r1 <- fp[3]
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; num2
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        add r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; new B.set_var(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new B
                        push fp
                        push r0
                        la r2 <- B..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l3
                        la r1 <- string14
                        syscall IO.out_string
                        syscall exit
l3:                     push r1
                        ;; obtain vtable from object in r1 with static type B
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
A.method2.end:          ;; method body ends
                        pop ra
                        li r2 <- 5
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A.method3:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        ;; fp[0] holds local x (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; num
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; new C.set_var(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new C
                        push fp
                        push r0
                        la r2 <- C..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l4
                        la r1 <- string15
                        syscall IO.out_string
                        syscall exit
l4:                     push r1
                        ;; obtain vtable from object in r1 with static type C
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
A.method3.end:          ;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A.method4:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[3] holds argument num1 (Int)
                        ;; fp[2] holds argument num2 (Int)
                        ;; method body begins
                        push r0
                        push fp
                        ;; num2
                        ld r1 <- fp[2]
                        push r1
                        ;; num1
                        ld r1 <- fp[3]
                        push r1
                        push r0
                        call lt_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l5
l6:                     ;; false branch
                        ;; fp[0] holds local x (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; num2
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; num1
                        ld r1 <- fp[3]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; new D.set_var(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new D
                        push fp
                        push r0
                        la r2 <- D..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l8
                        la r1 <- string16
                        syscall IO.out_string
                        syscall exit
l8:                     push r1
                        ;; obtain vtable from object in r1 with static type D
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
                        jmp l7
l5:                     ;; true branch
                        ;; fp[0] holds local x (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; num1
                        ld r1 <- fp[3]
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; num2
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; new D.set_var(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new D
                        push fp
                        push r0
                        la r2 <- D..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l9
                        la r1 <- string17
                        syscall IO.out_string
                        syscall exit
l9:                     push r1
                        ;; obtain vtable from object in r1 with static type D
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
l7:                     ;; end of if conditional
A.method4.end:          ;; method body ends
                        pop ra
                        li r2 <- 5
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A.method5:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 5
                        li r2 <- 5
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        ;; fp[0] holds local x (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; fp[-1] holds local y (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        st fp[-1] <- r1
l10:                    ;; while conditional check
                        push r0
                        push fp
                        ;; y
                        ld r1 <- fp[-1]
                        push r1
                        ;; num
                        ld r1 <- fp[2]
                        push r1
                        push r0
                        call le_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bz r1 l11
                        ;; x
                        ld r1 <- fp[0]
                        ld r1 <- r1[3]
                        st fp[-2] <- r1
                        ;; y
                        ld r1 <- fp[-1]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-2]
                        mul r1 <- r2 r1
                        st fp[-2] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-2]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; y
                        ld r1 <- fp[-1]
                        ld r1 <- r1[3]
                        st fp[-2] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-2]
                        add r1 <- r2 r1
                        st fp[-2] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-2]
                        st r1[3] <- r2
                        st fp[-1] <- r1
                        jmp l10
l11:                    ;; end of while loop
                        ;; new E.set_var(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new E
                        push fp
                        push r0
                        la r2 <- E..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l12
                        la r1 <- string18
                        syscall IO.out_string
                        syscall exit
l12:                    push r1
                        ;; obtain vtable from object in r1 with static type E
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
A.method5.end:          ;; method body ends
                        pop ra
                        li r2 <- 6
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A2I.c2i:                ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 2
                        li r2 <- 2
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument char (String)
                        ;; method body begins
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string19 holds "0"
                        la r2 <- string19
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l13
l14:                    ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string20 holds "1"
                        la r2 <- string20
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l16
l17:                    ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string21 holds "2"
                        la r2 <- string21
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l19
l20:                    ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string22 holds "3"
                        la r2 <- string22
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l22
l23:                    ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string23 holds "4"
                        la r2 <- string23
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l25
l26:                    ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string24 holds "5"
                        la r2 <- string24
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l28
l29:                    ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string25 holds "6"
                        la r2 <- string25
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l31
l32:                    ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string26 holds "7"
                        la r2 <- string26
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l34
l35:                    ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string27 holds "8"
                        la r2 <- string27
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l37
l38:                    ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- fp[2]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string28 holds "9"
                        la r2 <- string28
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l40
l41:                    ;; false branch
                        ;; abort(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up abort() at offset 2 in vtable
                        ld r2 <- r2[2]
                        call r2
                        pop fp
                        pop r0
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        jmp l42
l40:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 9
                        st r1[3] <- r2
l42:                    ;; end of if conditional
                        jmp l39
l37:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 8
                        st r1[3] <- r2
l39:                    ;; end of if conditional
                        jmp l36
l34:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 7
                        st r1[3] <- r2
l36:                    ;; end of if conditional
                        jmp l33
l31:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 6
                        st r1[3] <- r2
l33:                    ;; end of if conditional
                        jmp l30
l28:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 5
                        st r1[3] <- r2
l30:                    ;; end of if conditional
                        jmp l27
l25:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 4
                        st r1[3] <- r2
l27:                    ;; end of if conditional
                        jmp l24
l22:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 3
                        st r1[3] <- r2
l24:                    ;; end of if conditional
                        jmp l21
l19:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 2
                        st r1[3] <- r2
l21:                    ;; end of if conditional
                        jmp l18
l16:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
l18:                    ;; end of if conditional
                        jmp l15
l13:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
l15:                    ;; end of if conditional
A2I.c2i.end:            ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A2I.i2c:                ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 2
                        li r2 <- 2
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument i (Int)
                        ;; method body begins
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l43
l44:                    ;; false branch
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l46
l47:                    ;; false branch
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 2
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l49
l50:                    ;; false branch
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 3
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l52
l53:                    ;; false branch
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 4
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l55
l56:                    ;; false branch
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 5
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l58
l59:                    ;; false branch
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 6
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l61
l62:                    ;; false branch
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 7
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l64
l65:                    ;; false branch
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 8
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l67
l68:                    ;; false branch
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 9
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l70
l71:                    ;; false branch
                        ;; abort(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up abort() at offset 2 in vtable
                        ld r2 <- r2[2]
                        call r2
                        pop fp
                        pop r0
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string29 holds ""
                        la r2 <- string29
                        st r1[3] <- r2
                        jmp l72
l70:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string28 holds "9"
                        la r2 <- string28
                        st r1[3] <- r2
l72:                    ;; end of if conditional
                        jmp l69
l67:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string27 holds "8"
                        la r2 <- string27
                        st r1[3] <- r2
l69:                    ;; end of if conditional
                        jmp l66
l64:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string26 holds "7"
                        la r2 <- string26
                        st r1[3] <- r2
l66:                    ;; end of if conditional
                        jmp l63
l61:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string25 holds "6"
                        la r2 <- string25
                        st r1[3] <- r2
l63:                    ;; end of if conditional
                        jmp l60
l58:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string24 holds "5"
                        la r2 <- string24
                        st r1[3] <- r2
l60:                    ;; end of if conditional
                        jmp l57
l55:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string23 holds "4"
                        la r2 <- string23
                        st r1[3] <- r2
l57:                    ;; end of if conditional
                        jmp l54
l52:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string22 holds "3"
                        la r2 <- string22
                        st r1[3] <- r2
l54:                    ;; end of if conditional
                        jmp l51
l49:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string21 holds "2"
                        la r2 <- string21
                        st r1[3] <- r2
l51:                    ;; end of if conditional
                        jmp l48
l46:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string20 holds "1"
                        la r2 <- string20
                        st r1[3] <- r2
l48:                    ;; end of if conditional
                        jmp l45
l43:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string19 holds "0"
                        la r2 <- string19
                        st r1[3] <- r2
l45:                    ;; end of if conditional
A2I.i2c.end:            ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A2I.a2i:                ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument s (String)
                        ;; method body begins
                        push r0
                        push fp
                        ;; s.length(...)
                        push r0
                        push fp
                        ;; s
                        ld r1 <- fp[2]
                        bnz r1 l73
                        la r1 <- string30
                        syscall IO.out_string
                        syscall exit
l73:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up length() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l74
l75:                    ;; false branch
                        push r0
                        push fp
                        ;; s.substr(...)
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        push r1
                        ;; s
                        ld r1 <- fp[2]
                        bnz r1 l77
                        la r1 <- string31
                        syscall IO.out_string
                        syscall exit
l77:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up substr() at offset 7 in vtable
                        ld r2 <- r2[7]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string32 holds "-"
                        la r2 <- string32
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l78
l79:                    ;; false branch
                        push r0
                        push fp
                        ;; s.substr(...)
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        push r1
                        ;; s
                        ld r1 <- fp[2]
                        bnz r1 l81
                        la r1 <- string33
                        syscall IO.out_string
                        syscall exit
l81:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up substr() at offset 7 in vtable
                        ld r2 <- r2[7]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string34 holds "+"
                        la r2 <- string34
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l82
l83:                    ;; false branch
                        ;; a2i_aux(...)
                        push r0
                        push fp
                        ;; s
                        ld r1 <- fp[2]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up a2i_aux() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l84
l82:                    ;; true branch
                        ;; a2i_aux(...)
                        push r0
                        push fp
                        ;; s.substr(...)
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        push r1
                        ;; s.length(...)
                        push r0
                        push fp
                        ;; s
                        ld r1 <- fp[2]
                        bnz r1 l85
                        la r1 <- string33
                        syscall IO.out_string
                        syscall exit
l85:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up length() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        st fp[0] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[0]
                        sub r1 <- r2 r1
                        st fp[0] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[0]
                        st r1[3] <- r2
                        push r1
                        ;; s
                        ld r1 <- fp[2]
                        bnz r1 l86
                        la r1 <- string33
                        syscall IO.out_string
                        syscall exit
l86:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up substr() at offset 7 in vtable
                        ld r2 <- r2[7]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up a2i_aux() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
l84:                    ;; end of if conditional
                        jmp l80
l78:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        st fp[0] <- r1
                        ;; a2i_aux(...)
                        push r0
                        push fp
                        ;; s.substr(...)
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        push r1
                        ;; s.length(...)
                        push r0
                        push fp
                        ;; s
                        ld r1 <- fp[2]
                        bnz r1 l87
                        la r1 <- string31
                        syscall IO.out_string
                        syscall exit
l87:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up length() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        push r1
                        ;; s
                        ld r1 <- fp[2]
                        bnz r1 l88
                        la r1 <- string31
                        syscall IO.out_string
                        syscall exit
l88:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up substr() at offset 7 in vtable
                        ld r2 <- r2[7]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up a2i_aux() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        ld r2 <- fp[0]
                        sub r1 <- r2 r1
                        st fp[0] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[0]
                        st r1[3] <- r2
l80:                    ;; end of if conditional
                        jmp l76
l74:                    ;; true branch
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
l76:                    ;; end of if conditional
A2I.a2i.end:            ;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A2I.a2i_aux:            ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 6
                        li r2 <- 6
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument s (String)
                        ;; method body begins
                        ;; fp[0] holds local int (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; fp[-1] holds local j (Int)
                        ;; s.length(...)
                        push r0
                        push fp
                        ;; s
                        ld r1 <- fp[2]
                        bnz r1 l89
                        la r1 <- string35
                        syscall IO.out_string
                        syscall exit
l89:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up length() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
                        st fp[-1] <- r1
                        ;; fp[-2] holds local i (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        st fp[-2] <- r1
l90:                    ;; while conditional check
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[-2]
                        push r1
                        ;; j
                        ld r1 <- fp[-1]
                        push r1
                        push r0
                        call lt_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bz r1 l91
                        ;; int
                        ld r1 <- fp[0]
                        ld r1 <- r1[3]
                        st fp[-3] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 10
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-3]
                        mul r1 <- r2 r1
                        st fp[-3] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-3]
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        st fp[-3] <- r1
                        ;; c2i(...)
                        push r0
                        push fp
                        ;; s.substr(...)
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[-2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        push r1
                        ;; s
                        ld r1 <- fp[2]
                        bnz r1 l92
                        la r1 <- string36
                        syscall IO.out_string
                        syscall exit
l92:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up substr() at offset 7 in vtable
                        ld r2 <- r2[7]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up c2i() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        ld r2 <- fp[-3]
                        add r1 <- r2 r1
                        st fp[-3] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-3]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; i
                        ld r1 <- fp[-2]
                        ld r1 <- r1[3]
                        st fp[-3] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-3]
                        add r1 <- r2 r1
                        st fp[-3] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-3]
                        st r1[3] <- r2
                        st fp[-2] <- r1
                        jmp l90
l91:                    ;; end of while loop
                        ;; int
                        ld r1 <- fp[0]
A2I.a2i_aux.end:        ;; method body ends
                        pop ra
                        li r2 <- 7
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A2I.i2a:                ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument i (Int)
                        ;; method body begins
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l93
l94:                    ;; false branch
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        push r0
                        call lt_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l96
l97:                    ;; false branch
                        ;; "-".concat(...)
                        push r0
                        push fp
                        ;; i2a_aux(...)
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        st fp[0] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[0]
                        mul r1 <- r2 r1
                        st fp[0] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[0]
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up i2a_aux() at offset 10 in vtable
                        ld r2 <- r2[10]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string32 holds "-"
                        la r2 <- string32
                        st r1[3] <- r2
                        bnz r1 l99
                        la r1 <- string37
                        syscall IO.out_string
                        syscall exit
l99:                    push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up concat() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        jmp l98
l96:                    ;; true branch
                        ;; i2a_aux(...)
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up i2a_aux() at offset 10 in vtable
                        ld r2 <- r2[10]
                        call r2
                        pop fp
                        pop r0
l98:                    ;; end of if conditional
                        jmp l95
l93:                    ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string19 holds "0"
                        la r2 <- string19
                        st r1[3] <- r2
l95:                    ;; end of if conditional
A2I.i2a.end:            ;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
A2I.i2a_aux:            ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 4
                        li r2 <- 4
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument i (Int)
                        ;; method body begins
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l100
l101:                   ;; false branch
                        ;; fp[0] holds local next (Int)
                        ;; i
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        st fp[0] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 10
                        st r1[3] <- r2
                        ld r2 <- r1[3]
                        bnz r2 l103
                        la r1 <- string38
                        syscall IO.out_string
                        syscall exit
l103:                   ;; division is OK
                        ld r1 <- r1[3]
                        ld r2 <- fp[0]
                        div r1 <- r2 r1
                        st fp[0] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[0]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; i2a_aux(...).concat(...)
                        push r0
                        push fp
                        ;; i2c(...)
                        push r0
                        push fp
                        ;; i
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; next
                        ld r1 <- fp[0]
                        ld r1 <- r1[3]
                        st fp[-2] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 10
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-2]
                        mul r1 <- r2 r1
                        st fp[-2] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-2]
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up i2c() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; i2a_aux(...)
                        push r0
                        push fp
                        ;; next
                        ld r1 <- fp[0]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type A2I
                        ld r2 <- r0[2]
                        ;; look up i2a_aux() at offset 10 in vtable
                        ld r2 <- r2[10]
                        call r2
                        pop fp
                        pop r0
                        bnz r1 l104
                        la r1 <- string39
                        syscall IO.out_string
                        syscall exit
l104:                   push r1
                        ;; obtain vtable from object in r1 with static type String
                        ld r2 <- r1[2]
                        ;; look up concat() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        jmp l102
l100:                   ;; true branch
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string29 holds ""
                        la r2 <- string29
                        st r1[3] <- r2
l102:                   ;; end of if conditional
A2I.i2a_aux.end:        ;; method body ends
                        pop ra
                        li r2 <- 5
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
B.method5:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        ;; fp[0] holds local x (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; num
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; num
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        mul r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; new E.set_var(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new E
                        push fp
                        push r0
                        la r2 <- E..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l105
                        la r1 <- string40
                        syscall IO.out_string
                        syscall exit
l105:                   push r1
                        ;; obtain vtable from object in r1 with static type E
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
B.method5.end:          ;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
C.method5:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        ;; fp[0] holds local x (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; num
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; num
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        mul r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; num
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        mul r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; new E.set_var(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new E
                        push fp
                        push r0
                        la r2 <- E..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l106
                        la r1 <- string41
                        syscall IO.out_string
                        syscall exit
l106:                   push r1
                        ;; obtain vtable from object in r1 with static type E
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
C.method5.end:          ;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
C.method6:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        ;; fp[0] holds local x (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; num
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; new A.set_var(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new A
                        push fp
                        push r0
                        la r2 <- A..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l107
                        la r1 <- string42
                        syscall IO.out_string
                        syscall exit
l107:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
C.method6.end:          ;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
D.method7:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        ;; fp[0] holds local x (Int)
                        ;; num
                        ld r1 <- fp[2]
                        st fp[0] <- r1
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        push r0
                        call lt_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l108
l109:                   ;; false branch
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l111
l112:                   ;; false branch
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        push r1
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l114
l115:                   ;; false branch
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 2
                        st r1[3] <- r2
                        push r1
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l117
l118:                   ;; false branch
                        ;; method7(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 3
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type D
                        ld r2 <- r0[2]
                        ;; look up method7() at offset 12 in vtable
                        ld r2 <- r2[12]
                        call r2
                        pop fp
                        pop r0
                        jmp l119
l117:                   ;; true branch
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
l119:                   ;; end of if conditional
                        jmp l116
l114:                   ;; true branch
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
l116:                   ;; end of if conditional
                        jmp l113
l111:                   ;; true branch
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
l113:                   ;; end of if conditional
                        jmp l110
l108:                   ;; true branch
                        ;; method7(...)
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; x
                        ld r1 <- fp[0]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type D
                        ld r2 <- r0[2]
                        ;; look up method7() at offset 12 in vtable
                        ld r2 <- r2[12]
                        call r2
                        pop fp
                        pop r0
l110:                   ;; end of if conditional
D.method7.end:          ;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
E.method6:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field var (Int)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        ;; fp[0] holds local x (Int)
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; num
                        ld r1 <- fp[2]
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 8
                        st r1[3] <- r2
                        ld r2 <- r1[3]
                        bnz r2 l120
                        la r1 <- string43
                        syscall IO.out_string
                        syscall exit
l120:                   ;; division is OK
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        div r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        st fp[0] <- r1
                        ;; new A.set_var(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new A
                        push fp
                        push r0
                        la r2 <- A..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l121
                        la r1 <- string44
                        syscall IO.out_string
                        syscall exit
l121:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
E.method6.end:          ;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO.in_int:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        mov r2 <- r1
                        syscall IO.in_int
                        st r2[3] <- r1
                        mov r1 <- r2
IO.in_int.end:          ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO.in_string:           ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        mov r2 <- r1
                        syscall IO.in_string
                        st r2[3] <- r1
                        mov r1 <- r2
IO.in_string.end:       ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO.out_int:             ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument x (Int)
                        ;; method body begins
                        ld r2 <- fp[2]
                        ld r1 <- r2[3]
                        syscall IO.out_int
                        mov r1 <- r0
IO.out_int.end:         ;; method body ends
                        pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IO.out_string:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument x (String)
                        ;; method body begins
                        ld r2 <- fp[2]
                        ld r1 <- r2[3]
                        syscall IO.out_string
                        mov r1 <- r0
IO.out_string.end:      ;; method body ends
                        pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main.menu:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field char (String)
                        ;; self[4] holds field avar (A)
                        ;; self[5] holds field a_var (A)
                        ;; self[6] holds field flag (Bool)
                        ;; method body begins
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string45 holds "\n\tTo add a number ..."
                        la r2 <- string45
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string46 holds "...enter a:\n"
                        la r2 <- string46
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string47 holds "\tTo negate "
                        la r2 <- string47
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string48 holds "...enter b:\n"
                        la r2 <- string48
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string49 holds "\tTo find the differ..."
                        la r2 <- string49
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string50 holds "and another number....."
                        la r2 <- string50
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string51 holds "\tTo find the factor..."
                        la r2 <- string51
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string52 holds "...enter d:\n"
                        la r2 <- string52
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string53 holds "\tTo square "
                        la r2 <- string53
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string54 holds "...enter e:\n"
                        la r2 <- string54
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string55 holds "\tTo cube "
                        la r2 <- string55
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string56 holds "...enter f:\n"
                        la r2 <- string56
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string57 holds "\tTo find out if "
                        la r2 <- string57
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string58 holds "is a multiple of 3....."
                        la r2 <- string58
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string59 holds "\tTo divide "
                        la r2 <- string59
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string60 holds "by 8...enter h:\n"
                        la r2 <- string60
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string61 holds "\tTo get a new numbe..."
                        la r2 <- string61
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string62 holds "\tTo quit...enter q:..."
                        la r2 <- string62
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; in_string(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up in_string() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
Main.menu.end:          ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main.prompt:            ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field char (String)
                        ;; self[4] holds field avar (A)
                        ;; self[5] holds field a_var (A)
                        ;; self[6] holds field flag (Bool)
                        ;; method body begins
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string63 holds "\n"
                        la r2 <- string63
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string64 holds "Please enter a numbe..."
                        la r2 <- string64
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; in_string(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up in_string() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
Main.prompt.end:        ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main.get_int:           ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field char (String)
                        ;; self[4] holds field avar (A)
                        ;; self[5] holds field a_var (A)
                        ;; self[6] holds field flag (Bool)
                        ;; method body begins
                        ;; fp[0] holds local z (A2I)
                        ;; new A2I
                        push fp
                        push r0
                        la r2 <- A2I..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; fp[-1] holds local s (String)
                        ;; prompt(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up prompt() at offset 10 in vtable
                        ld r2 <- r2[10]
                        call r2
                        pop fp
                        pop r0
                        st fp[-1] <- r1
                        ;; z.a2i(...)
                        push r0
                        push fp
                        ;; s
                        ld r1 <- fp[-1]
                        push r1
                        ;; z
                        ld r1 <- fp[0]
                        bnz r1 l122
                        la r1 <- string65
                        syscall IO.out_string
                        syscall exit
l122:                   push r1
                        ;; obtain vtable from object in r1 with static type A2I
                        ld r2 <- r1[2]
                        ;; look up a2i() at offset 7 in vtable
                        ld r2 <- r2[7]
                        call r2
                        pop fp
                        pop r0
Main.get_int.end:       ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main.is_even:           ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 3
                        li r2 <- 3
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field char (String)
                        ;; self[4] holds field avar (A)
                        ;; self[5] holds field a_var (A)
                        ;; self[6] holds field flag (Bool)
                        ;; fp[2] holds argument num (Int)
                        ;; method body begins
                        ;; fp[0] holds local x (Int)
                        ;; num
                        ld r1 <- fp[2]
                        st fp[0] <- r1
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        push r0
                        call lt_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l123
l124:                   ;; false branch
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        push r1
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l126
l127:                   ;; false branch
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        push r1
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l129
l130:                   ;; false branch
                        ;; is_even(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 2
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up is_even() at offset 12 in vtable
                        ld r2 <- r2[12]
                        call r2
                        pop fp
                        pop r0
                        jmp l131
l129:                   ;; true branch
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
l131:                   ;; end of if conditional
                        jmp l128
l126:                   ;; true branch
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
l128:                   ;; end of if conditional
                        jmp l125
l123:                   ;; true branch
                        ;; is_even(...)
                        push r0
                        push fp
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; x
                        ld r1 <- fp[0]
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up is_even() at offset 12 in vtable
                        ld r2 <- r2[12]
                        call r2
                        pop fp
                        pop r0
l125:                   ;; end of if conditional
Main.is_even.end:       ;; method body ends
                        pop ra
                        li r2 <- 4
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main.class_type:        ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 2
                        li r2 <- 2
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field char (String)
                        ;; self[4] holds field avar (A)
                        ;; self[5] holds field a_var (A)
                        ;; self[6] holds field flag (Bool)
                        ;; fp[2] holds argument var (A)
                        ;; method body begins
                        ;; case expression begins
                        ;; var
                        ld r1 <- fp[2]
                        bz r1 l132
                        st fp[0] <- r1
                        ld r1 <- r1[0]
                        ;; case A will jump to l133
                        ;; case B will jump to l134
                        ;; case C will jump to l135
                        ;; case D will jump to l136
                        ;; case E will jump to l137
                        ;; case Object will jump to l138
                        ;; case expression: compare type tags
                        li r2 <- 10
                        beq r1 r2 l133
                        li r2 <- 11
                        beq r1 r2 l138
                        li r2 <- 12
                        beq r1 r2 l134
                        li r2 <- 0
                        beq r1 r2 l138
                        li r2 <- 13
                        beq r1 r2 l135
                        li r2 <- 14
                        beq r1 r2 l136
                        li r2 <- 15
                        beq r1 r2 l137
                        li r2 <- 16
                        beq r1 r2 l138
                        li r2 <- 1
                        beq r1 r2 l138
                        li r2 <- 17
                        beq r1 r2 l138
                        li r2 <- 18
                        beq r1 r2 l138
                        li r2 <- 3
                        beq r1 r2 l138
l139:                   ;; case expression: error case
                        la r1 <- string66
                        syscall IO.out_string
                        syscall exit
l132:                   ;; case expression: void case
                        la r1 <- string67
                        syscall IO.out_string
                        syscall exit
                        ;; case expression: branches
l133:                   ;; fp[0] holds case a (A)
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string68 holds "Class type is now A\..."
                        la r2 <- string68
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l140
l134:                   ;; fp[0] holds case b (B)
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string69 holds "Class type is now B\..."
                        la r2 <- string69
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l140
l135:                   ;; fp[0] holds case c (C)
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string70 holds "Class type is now C\..."
                        la r2 <- string70
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l140
l136:                   ;; fp[0] holds case d (D)
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string71 holds "Class type is now D\..."
                        la r2 <- string71
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l140
l137:                   ;; fp[0] holds case e (E)
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string72 holds "Class type is now E\..."
                        la r2 <- string72
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l140
l138:                   ;; fp[0] holds case o (Object)
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string73 holds "Oooops\n"
                        la r2 <- string73
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l140
l140:                   ;; case expression ends
Main.class_type.end:    ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main.print:             ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 2
                        li r2 <- 2
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field char (String)
                        ;; self[4] holds field avar (A)
                        ;; self[5] holds field a_var (A)
                        ;; self[6] holds field flag (Bool)
                        ;; fp[2] holds argument var (A)
                        ;; method body begins
                        ;; fp[0] holds local z (A2I)
                        ;; new A2I
                        push fp
                        push r0
                        la r2 <- A2I..new
                        call r2
                        pop r0
                        pop fp
                        st fp[0] <- r1
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; z.i2a(...)
                        push r0
                        push fp
                        ;; var.value(...)
                        push r0
                        push fp
                        ;; var
                        ld r1 <- fp[2]
                        bnz r1 l141
                        la r1 <- string74
                        syscall IO.out_string
                        syscall exit
l141:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; z
                        ld r1 <- fp[0]
                        bnz r1 l142
                        la r1 <- string74
                        syscall IO.out_string
                        syscall exit
l142:                   push r1
                        ;; obtain vtable from object in r1 with static type A2I
                        ld r2 <- r1[2]
                        ;; look up i2a() at offset 9 in vtable
                        ld r2 <- r2[9]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string75 holds " "
                        la r2 <- string75
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
Main.print.end:         ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Main.main:              ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 6
                        li r2 <- 6
                        sub sp <- sp r2
                        push ra
                        ;; self[3] holds field char (String)
                        ;; self[4] holds field avar (A)
                        ;; self[5] holds field a_var (A)
                        ;; self[6] holds field flag (Bool)
                        ;; method body begins
                        ;; new A
                        push fp
                        push r0
                        la r2 <- A..new
                        call r2
                        pop r0
                        pop fp
                        st r0[4] <- r1
l143:                   ;; while conditional check
                        ;; flag
                        ld r1 <- r0[6]
                        ld r1 <- r1[3]
                        bz r1 l144
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string76 holds "number "
                        la r2 <- string76
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; is_even(...)
                        push r0
                        push fp
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l145
                        la r1 <- string77
                        syscall IO.out_string
                        syscall exit
l145:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up is_even() at offset 12 in vtable
                        ld r2 <- r2[12]
                        call r2
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l146
l147:                   ;; false branch
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string78 holds "is odd!\n"
                        la r2 <- string78
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l148
l146:                   ;; true branch
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string79 holds "is even!\n"
                        la r2 <- string79
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
l148:                   ;; end of if conditional
                        ;; class_type(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up class_type() at offset 13 in vtable
                        ld r2 <- r2[13]
                        call r2
                        pop fp
                        pop r0
                        ;; menu(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up menu() at offset 9 in vtable
                        ld r2 <- r2[9]
                        call r2
                        pop fp
                        pop r0
                        st r0[3] <- r1
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string80 holds "a"
                        la r2 <- string80
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l149
l150:                   ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string81 holds "b"
                        la r2 <- string81
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l152
l153:                   ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string82 holds "c"
                        la r2 <- string82
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l155
l156:                   ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string83 holds "d"
                        la r2 <- string83
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l158
l159:                   ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string84 holds "e"
                        la r2 <- string84
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l161
l162:                   ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string85 holds "f"
                        la r2 <- string85
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l164
l165:                   ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string86 holds "g"
                        la r2 <- string86
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l167
l168:                   ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string87 holds "h"
                        la r2 <- string87
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l170
l171:                   ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string88 holds "j"
                        la r2 <- string88
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l173
l174:                   ;; false branch
                        push r0
                        push fp
                        ;; char
                        ld r1 <- r0[3]
                        push r1
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string89 holds "q"
                        la r2 <- string89
                        st r1[3] <- r2
                        push r1
                        push r0
                        call eq_handler
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l176
l177:                   ;; false branch
                        ;; new A.method1(...)
                        push r0
                        push fp
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l179
                        la r1 <- string90
                        syscall IO.out_string
                        syscall exit
l179:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new A
                        push fp
                        push r0
                        la r2 <- A..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l180
                        la r1 <- string90
                        syscall IO.out_string
                        syscall exit
l180:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up method1() at offset 7 in vtable
                        ld r2 <- r2[7]
                        call r2
                        pop fp
                        pop r0
                        st r0[4] <- r1
                        jmp l178
l176:                   ;; true branch
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        st r0[6] <- r1
l178:                   ;; end of if conditional
                        jmp l175
l173:                   ;; true branch
                        ;; new A
                        push fp
                        push r0
                        la r2 <- A..new
                        call r2
                        pop r0
                        pop fp
                        st r0[4] <- r1
l175:                   ;; end of if conditional
                        jmp l172
l170:                   ;; true branch
                        ;; fp[0] holds local x (A)
                        li r1 <- 0
                        st fp[0] <- r1
                        ;; new E.method6(...)
                        push r0
                        push fp
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l181
                        la r1 <- string91
                        syscall IO.out_string
                        syscall exit
l181:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new E
                        push fp
                        push r0
                        la r2 <- E..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l182
                        la r1 <- string91
                        syscall IO.out_string
                        syscall exit
l182:                   push r1
                        ;; obtain vtable from object in r1 with static type E
                        ld r2 <- r1[2]
                        ;; look up method6() at offset 13 in vtable
                        ld r2 <- r2[13]
                        call r2
                        pop fp
                        pop r0
                        st fp[0] <- r1
                        ;; fp[-1] holds local r (Int)
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l183
                        la r1 <- string92
                        syscall IO.out_string
                        syscall exit
l183:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        st fp[-1] <- r1
                        ;; x.value(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        bnz r1 l184
                        la r1 <- string92
                        syscall IO.out_string
                        syscall exit
l184:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        st fp[-2] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 8
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-2]
                        mul r1 <- r2 r1
                        st fp[-2] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-2]
                        st r1[3] <- r2
                        ld r1 <- r1[3]
                        ld r2 <- fp[-1]
                        sub r1 <- r2 r1
                        st fp[-1] <- r1
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        ld r2 <- fp[-1]
                        st r1[3] <- r2
                        st fp[-1] <- r1
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string76 holds "number "
                        la r2 <- string76
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string93 holds "is equal to "
                        la r2 <- string93
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; x
                        ld r1 <- fp[0]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string94 holds "times 8 with a remai..."
                        la r2 <- string94
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; fp[-2] holds local a (A2I)
                        ;; new A2I
                        push fp
                        push r0
                        la r2 <- A2I..new
                        call r2
                        pop r0
                        pop fp
                        st fp[-2] <- r1
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; a.i2a(...)
                        push r0
                        push fp
                        ;; r
                        ld r1 <- fp[-1]
                        push r1
                        ;; a
                        ld r1 <- fp[-2]
                        bnz r1 l185
                        la r1 <- string95
                        syscall IO.out_string
                        syscall exit
l185:                   push r1
                        ;; obtain vtable from object in r1 with static type A2I
                        ld r2 <- r1[2]
                        ;; look up i2a() at offset 9 in vtable
                        ld r2 <- r2[9]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string63 holds "\n"
                        la r2 <- string63
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; x
                        ld r1 <- fp[0]
                        st r0[4] <- r1
l172:                   ;; end of if conditional
                        jmp l169
l167:                   ;; true branch
                        ;; new D.method7(...)
                        push r0
                        push fp
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l186
                        la r1 <- string96
                        syscall IO.out_string
                        syscall exit
l186:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new D
                        push fp
                        push r0
                        la r2 <- D..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l187
                        la r1 <- string96
                        syscall IO.out_string
                        syscall exit
l187:                   push r1
                        ;; obtain vtable from object in r1 with static type D
                        ld r2 <- r1[2]
                        ;; look up method7() at offset 12 in vtable
                        ld r2 <- r2[12]
                        call r2
                        pop fp
                        pop r0
                        ld r1 <- r1[3]
                        bnz r1 l188
l189:                   ;; false branch
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string76 holds "number "
                        la r2 <- string76
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string97 holds "is not divisible by ..."
                        la r2 <- string97
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        jmp l190
l188:                   ;; true branch
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string76 holds "number "
                        la r2 <- string76
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; print(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up print() at offset 14 in vtable
                        ld r2 <- r2[14]
                        call r2
                        pop fp
                        pop r0
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string98 holds "is divisible by 3.\n"
                        la r2 <- string98
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
l190:                   ;; end of if conditional
l169:                   ;; end of if conditional
                        jmp l166
l164:                   ;; true branch
                        ;; new C@C.method5(...)
                        push r0
                        push fp
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l191
                        la r1 <- string99
                        syscall IO.out_string
                        syscall exit
l191:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new C
                        push fp
                        push r0
                        la r2 <- C..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l192
                        la r1 <- string99
                        syscall IO.out_string
                        syscall exit
l192:                   push r1
                        ;; obtain vtable for class C
                        la r2 <- C..vtable
                        ;; look up method5() at offset 11 in vtable
                        ld r2 <- r2[11]
                        call r2
                        pop fp
                        pop r0
                        st r0[4] <- r1
l166:                   ;; end of if conditional
                        jmp l163
l161:                   ;; true branch
                        ;; new C@B.method5(...)
                        push r0
                        push fp
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l193
                        la r1 <- string100
                        syscall IO.out_string
                        syscall exit
l193:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new C
                        push fp
                        push r0
                        la r2 <- C..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l194
                        la r1 <- string100
                        syscall IO.out_string
                        syscall exit
l194:                   push r1
                        ;; obtain vtable for class B
                        la r2 <- B..vtable
                        ;; look up method5() at offset 11 in vtable
                        ld r2 <- r2[11]
                        call r2
                        pop fp
                        pop r0
                        st r0[4] <- r1
l163:                   ;; end of if conditional
                        jmp l160
l158:                   ;; true branch
                        ;; new C@A.method5(...)
                        push r0
                        push fp
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l195
                        la r1 <- string101
                        syscall IO.out_string
                        syscall exit
l195:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new C
                        push fp
                        push r0
                        la r2 <- C..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l196
                        la r1 <- string101
                        syscall IO.out_string
                        syscall exit
l196:                   push r1
                        ;; obtain vtable for class A
                        la r2 <- A..vtable
                        ;; look up method5() at offset 11 in vtable
                        ld r2 <- r2[11]
                        call r2
                        pop fp
                        pop r0
                        st r0[4] <- r1
l160:                   ;; end of if conditional
                        jmp l157
l155:                   ;; true branch
                        ;; new A.set_var(...)
                        push r0
                        push fp
                        ;; get_int(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up get_int() at offset 11 in vtable
                        ld r2 <- r2[11]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new A
                        push fp
                        push r0
                        la r2 <- A..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l197
                        la r1 <- string102
                        syscall IO.out_string
                        syscall exit
l197:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
                        st r0[5] <- r1
                        ;; new D.method4(...)
                        push r0
                        push fp
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l198
                        la r1 <- string103
                        syscall IO.out_string
                        syscall exit
l198:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; a_var.value(...)
                        push r0
                        push fp
                        ;; a_var
                        ld r1 <- r0[5]
                        bnz r1 l199
                        la r1 <- string103
                        syscall IO.out_string
                        syscall exit
l199:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new D
                        push fp
                        push r0
                        la r2 <- D..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l200
                        la r1 <- string103
                        syscall IO.out_string
                        syscall exit
l200:                   push r1
                        ;; obtain vtable from object in r1 with static type D
                        ld r2 <- r1[2]
                        ;; look up method4() at offset 10 in vtable
                        ld r2 <- r2[10]
                        call r2
                        pop fp
                        pop r0
                        st r0[4] <- r1
l157:                   ;; end of if conditional
                        jmp l154
l152:                   ;; true branch
                        ;; case expression begins
                        ;; avar
                        ld r1 <- r0[4]
                        bz r1 l201
                        st fp[0] <- r1
                        ld r1 <- r1[0]
                        ;; case C will jump to l202
                        ;; case A will jump to l203
                        ;; case Object will jump to l204
                        ;; case expression: compare type tags
                        li r2 <- 10
                        beq r1 r2 l203
                        li r2 <- 11
                        beq r1 r2 l204
                        li r2 <- 12
                        beq r1 r2 l203
                        li r2 <- 0
                        beq r1 r2 l204
                        li r2 <- 13
                        beq r1 r2 l202
                        li r2 <- 14
                        beq r1 r2 l203
                        li r2 <- 15
                        beq r1 r2 l203
                        li r2 <- 16
                        beq r1 r2 l204
                        li r2 <- 1
                        beq r1 r2 l204
                        li r2 <- 17
                        beq r1 r2 l204
                        li r2 <- 18
                        beq r1 r2 l204
                        li r2 <- 3
                        beq r1 r2 l204
l205:                   ;; case expression: error case
                        la r1 <- string104
                        syscall IO.out_string
                        syscall exit
l201:                   ;; case expression: void case
                        la r1 <- string105
                        syscall IO.out_string
                        syscall exit
                        ;; case expression: branches
l202:                   ;; fp[0] holds case c (C)
                        ;; c.method6(...)
                        push r0
                        push fp
                        ;; c.value(...)
                        push r0
                        push fp
                        ;; c
                        ld r1 <- fp[0]
                        bnz r1 l207
                        la r1 <- string106
                        syscall IO.out_string
                        syscall exit
l207:                   push r1
                        ;; obtain vtable from object in r1 with static type C
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; c
                        ld r1 <- fp[0]
                        bnz r1 l208
                        la r1 <- string106
                        syscall IO.out_string
                        syscall exit
l208:                   push r1
                        ;; obtain vtable from object in r1 with static type C
                        ld r2 <- r1[2]
                        ;; look up method6() at offset 12 in vtable
                        ld r2 <- r2[12]
                        call r2
                        pop fp
                        pop r0
                        st r0[4] <- r1
                        jmp l206
l203:                   ;; fp[0] holds case a (A)
                        ;; a.method3(...)
                        push r0
                        push fp
                        ;; a.value(...)
                        push r0
                        push fp
                        ;; a
                        ld r1 <- fp[0]
                        bnz r1 l209
                        la r1 <- string107
                        syscall IO.out_string
                        syscall exit
l209:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; a
                        ld r1 <- fp[0]
                        bnz r1 l210
                        la r1 <- string107
                        syscall IO.out_string
                        syscall exit
l210:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up method3() at offset 9 in vtable
                        ld r2 <- r2[9]
                        call r2
                        pop fp
                        pop r0
                        st r0[4] <- r1
                        jmp l206
l204:                   ;; fp[0] holds case o (Object)
                        ;; out_string(...)
                        push r0
                        push fp
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        ;; string73 holds "Oooops\n"
                        la r2 <- string73
                        st r1[3] <- r2
                        push r1
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up out_string() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        ;; abort(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up abort() at offset 2 in vtable
                        ld r2 <- r2[2]
                        call r2
                        pop fp
                        pop r0
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 0
                        st r1[3] <- r2
                        jmp l206
l206:                   ;; case expression ends
l154:                   ;; end of if conditional
                        jmp l151
l149:                   ;; true branch
                        ;; new A.set_var(...)
                        push r0
                        push fp
                        ;; get_int(...)
                        push r0
                        push fp
                        push r0
                        ;; obtain vtable for self object of type Main
                        ld r2 <- r0[2]
                        ;; look up get_int() at offset 11 in vtable
                        ld r2 <- r2[11]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new A
                        push fp
                        push r0
                        la r2 <- A..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l211
                        la r1 <- string108
                        syscall IO.out_string
                        syscall exit
l211:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up set_var() at offset 6 in vtable
                        ld r2 <- r2[6]
                        call r2
                        pop fp
                        pop r0
                        st r0[5] <- r1
                        ;; new B.method2(...)
                        push r0
                        push fp
                        ;; avar.value(...)
                        push r0
                        push fp
                        ;; avar
                        ld r1 <- r0[4]
                        bnz r1 l212
                        la r1 <- string109
                        syscall IO.out_string
                        syscall exit
l212:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; a_var.value(...)
                        push r0
                        push fp
                        ;; a_var
                        ld r1 <- r0[5]
                        bnz r1 l213
                        la r1 <- string109
                        syscall IO.out_string
                        syscall exit
l213:                   push r1
                        ;; obtain vtable from object in r1 with static type A
                        ld r2 <- r1[2]
                        ;; look up value() at offset 5 in vtable
                        ld r2 <- r2[5]
                        call r2
                        pop fp
                        pop r0
                        push r1
                        ;; new B
                        push fp
                        push r0
                        la r2 <- B..new
                        call r2
                        pop r0
                        pop fp
                        bnz r1 l214
                        la r1 <- string109
                        syscall IO.out_string
                        syscall exit
l214:                   push r1
                        ;; obtain vtable from object in r1 with static type B
                        ld r2 <- r1[2]
                        ;; look up method2() at offset 8 in vtable
                        ld r2 <- r2[8]
                        call r2
                        pop fp
                        pop r0
                        st r0[4] <- r1
l151:                   ;; end of if conditional
                        jmp l143
l144:                   ;; end of while loop
Main.main.end:          ;; method body ends
                        pop ra
                        li r2 <- 6
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String.concat:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; fp[2] holds argument s (String)
                        ;; method body begins
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        mov r3 <- r1
                        ld r2 <- fp[2]
                        ld r2 <- r2[3]
                        ld r1 <- r0[3]
                        syscall String.concat
                        st r3[3] <- r1
                        mov r1 <- r3
String.concat.end:      ;; method body ends
                        pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String.length:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; method body begins
                        ;; new Int
                        push fp
                        push r0
                        la r2 <- Int..new
                        call r2
                        pop r0
                        pop fp
                        mov r2 <- r1
                        ld r1 <- r0[3]
                        syscall String.length
                        st r2[3] <- r1
                        mov r1 <- r2
String.length.end:      ;; method body ends
                        pop ra
                        li r2 <- 1
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
String.substr:          ;; method definition
                        mov fp <- sp
                        pop r0
                        ;; stack room for temporaries: 1
                        li r2 <- 1
                        sub sp <- sp r2
                        push ra
                        ;; fp[3] holds argument i (Int)
                        ;; fp[2] holds argument l (Int)
                        ;; method body begins
                        ;; new String
                        push fp
                        push r0
                        la r2 <- String..new
                        call r2
                        pop r0
                        pop fp
                        mov r3 <- r1
                        ld r2 <- fp[2]
                        ld r2 <- r2[3]
                        ld r1 <- fp[3]
                        ld r1 <- r1[3]
                        ld r0 <- r0[3]
                        syscall String.substr
                        bnz r1 l215
                        la r1 <- string110
                        syscall IO.out_string
                        syscall exit
l215:                   st r3[3] <- r1
                        mov r1 <- r3
String.substr.end:      ;; method body ends
                        pop ra
                        li r2 <- 3
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;; global string constants
the.empty.string:       constant ""
string1:                constant "A"
string2:                constant "A2I"
string3:                constant "B"
string4:                constant "Bool"
string5:                constant "C"
string6:                constant "D"
string7:                constant "E"
string8:                constant "IO"
string9:                constant "Int"
string10:               constant "Main"
string11:               constant "Object"
string12:               constant "String"
string13:               constant "abort\n"
string14:               constant "ERROR: 28: Exception: dispatch on void\n"
string15:               constant "ERROR: 37: Exception: dispatch on void\n"
string16:               constant "ERROR: 54: Exception: dispatch on void\n"
string17:               constant "ERROR: 47: Exception: dispatch on void\n"
string18:               constant "ERROR: 71: Exception: dispatch on void\n"
string19:               constant "0"
string20:               constant "1"
string21:               constant "2"
string22:               constant "3"
string23:               constant "4"
string24:               constant "5"
string25:               constant "6"
string26:               constant "7"
string27:               constant "8"
string28:               constant "9"
string29:               constant ""
string30:               constant "ERROR: 200: Exception: dispatch on void\n"
string31:               constant "ERROR: 201: Exception: dispatch on void\n"
string32:               constant "-"
string33:               constant "ERROR: 202: Exception: dispatch on void\n"
string34:               constant "+"
string35:               constant "ERROR: 214: Exception: dispatch on void\n"
string36:               constant "ERROR: 218: Exception: dispatch on void\n"
string37:               constant "ERROR: 235: Exception: dispatch on void\n"
string38:               constant "ERROR: 243: Exception: division by zero\n"
string39:               constant "ERROR: 244: Exception: dispatch on void\n"
string40:               constant "ERROR: 84: Exception: dispatch on void\n"
string41:               constant "ERROR: 106: Exception: dispatch on void\n"
string42:               constant "ERROR: 97: Exception: dispatch on void\n"
string43:               constant "ERROR: 133: Exception: division by zero\n"
string44:               constant "ERROR: 134: Exception: dispatch on void\n"
string45:               constant "\n\tTo add a number to "
string46:               constant "...enter a:\n"
string47:               constant "\tTo negate "
string48:               constant "...enter b:\n"
string49:               constant "\tTo find the difference between "
string50:               constant "and another number...enter c:\n"
string51:               constant "\tTo find the factorial of "
string52:               constant "...enter d:\n"
string53:               constant "\tTo square "
string54:               constant "...enter e:\n"
string55:               constant "\tTo cube "
string56:               constant "...enter f:\n"
string57:               constant "\tTo find out if "
string58:               constant "is a multiple of 3...enter g:\n"
string59:               constant "\tTo divide "
string60:               constant "by 8...enter h:\n"
string61:               constant "\tTo get a new number...enter j:\n"
string62:               constant "\tTo quit...enter q:\n\n"
string63:               constant "\n"
string64:               constant "Please enter a number...  "
string65:               constant "ERROR: 303: Exception: dispatch on void\n"
string66:               constant "ERROR: 320: Exception: case without matching branch\n"
string67:               constant "ERROR: 320: Exception: case on void\n"
string68:               constant "Class type is now A\n"
string69:               constant "Class type is now B\n"
string70:               constant "Class type is now C\n"
string71:               constant "Class type is now D\n"
string72:               constant "Class type is now E\n"
string73:               constant "Oooops\n"
string74:               constant "ERROR: 333: Exception: dispatch on void\n"
string75:               constant " "
string76:               constant "number "
string77:               constant "ERROR: 347: Exception: dispatch on void\n"
string78:               constant "is odd!\n"
string79:               constant "is even!\n"
string80:               constant "a"
string81:               constant "b"
string82:               constant "c"
string83:               constant "d"
string84:               constant "e"
string85:               constant "f"
string86:               constant "g"
string87:               constant "h"
string88:               constant "j"
string89:               constant "q"
string90:               constant "ERROR: 422: Exception: dispatch on void\n"
string91:               constant "ERROR: 398: Exception: dispatch on void\n"
string92:               constant "ERROR: 399: Exception: dispatch on void\n"
string93:               constant "is equal to "
string94:               constant "times 8 with a remainder of "
string95:               constant "ERROR: 408: Exception: dispatch on void\n"
string96:               constant "ERROR: 381: Exception: dispatch on void\n"
string97:               constant "is not divisible by 3.\n"
string98:               constant "is divisible by 3.\n"
string99:               constant "ERROR: 378: Exception: dispatch on void\n"
string100:              constant "ERROR: 376: Exception: dispatch on void\n"
string101:              constant "ERROR: 374: Exception: dispatch on void\n"
string102:              constant "ERROR: 371: Exception: dispatch on void\n"
string103:              constant "ERROR: 372: Exception: dispatch on void\n"
string104:              constant "ERROR: 361: Exception: case without matching branch\n"
string105:              constant "ERROR: 361: Exception: case on void\n"
string106:              constant "ERROR: 362: Exception: dispatch on void\n"
string107:              constant "ERROR: 363: Exception: dispatch on void\n"
string108:              constant "ERROR: 357: Exception: dispatch on void\n"
string109:              constant "ERROR: 358: Exception: dispatch on void\n"
string110:              constant "ERROR: 0: Exception: String.substr out of range\n"
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
eq_handler:             ;; helper function for =
                        mov fp <- sp
                        pop r0
                        push ra
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        beq r1 r2 eq_true
                        li r3 <- 0
                        beq r1 r3 eq_false
                        beq r2 r3 eq_false
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        ;; place the sum of the type tags in r1
                        add r1 <- r1 r2
                        li r2 <- 0
                        beq r1 r2 eq_bool
                        li r2 <- 2
                        beq r1 r2 eq_int
                        li r2 <- 6
                        beq r1 r2 eq_string
                        ;; otherwise, use pointer comparison
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        beq r1 r2 eq_true
eq_false:               ;; not equal
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        jmp eq_end
eq_true:                ;; equal
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        jmp eq_end
eq_bool:                ;; two Bools
eq_int:                 ;; two Ints
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        beq r1 r2 eq_true
                        jmp eq_false
eq_string:              ;; two Strings
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        beq r1 r2 eq_true
                        jmp eq_false
eq_end:                 pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
le_handler:             ;; helper function for <=
                        mov fp <- sp
                        pop r0
                        push ra
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        beq r1 r2 le_true
                        li r3 <- 0
                        beq r1 r3 le_false
                        beq r2 r3 le_false
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        ;; place the sum of the type tags in r1
                        add r1 <- r1 r2
                        li r2 <- 0
                        beq r1 r2 le_bool
                        li r2 <- 2
                        beq r1 r2 le_int
                        li r2 <- 6
                        beq r1 r2 le_string
                        ;; for non-primitives, equality is our only hope
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        beq r1 r2 le_true
le_false:               ;; not less-than-or-equal
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        jmp le_end
le_true:                ;; less-than-or-equal
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        jmp le_end
le_bool:                ;; two Bools
le_int:                 ;; two Ints
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        ble r1 r2 le_true
                        jmp le_false
le_string:              ;; two Strings
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        ble r1 r2 le_true
                        jmp le_false
le_end:                 pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
lt_handler:             ;; helper function for <
                        mov fp <- sp
                        pop r0
                        push ra
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        li r3 <- 0
                        beq r1 r3 lt_false
                        beq r2 r3 lt_false
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        ;; place the sum of the type tags in r1
                        add r1 <- r1 r2
                        li r2 <- 0
                        beq r1 r2 lt_bool
                        li r2 <- 2
                        beq r1 r2 lt_int
                        li r2 <- 6
                        beq r1 r2 lt_string
                        ;; for non-primitives, < is always false
lt_false:               ;; not less than
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        jmp lt_end
lt_true:                ;; less than
                        ;; new Bool
                        push fp
                        push r0
                        la r2 <- Bool..new
                        call r2
                        pop r0
                        pop fp
                        li r2 <- 1
                        st r1[3] <- r2
                        jmp lt_end
lt_bool:                ;; two Bools
lt_int:                 ;; two Ints
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        blt r1 r2 lt_true
                        jmp lt_false
lt_string:              ;; two Strings
                        ld r1 <- fp[3]
                        ld r2 <- fp[2]
                        ld r1 <- r1[3]
                        ld r2 <- r2[3]
                        ld r1 <- r1[0]
                        ld r2 <- r2[0]
                        blt r1 r2 lt_true
                        jmp lt_false
lt_end:                 pop ra
                        li r2 <- 2
                        add sp <- sp r2
                        return
                        ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
start:                  ;; program begins here
                        la r2 <- Main..new
                        push fp
                        call r2
                        push fp
                        push r1
                        la r2 <- Main.main
                        call r2
                        syscall exit
